{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-07T00:54:22.482Z",
    "end": "2024-05-07T00:54:22.557Z",
    "duration": 75,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d5cc68a9-980e-4354-90ef-ec164e651bc4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 5,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "6d98b1e4-fdc0-4991-9bf5-1bda1e5a76cd",
          "parentUUID": "d5cc68a9-980e-4354-90ef-ec164e651bc4",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "47c74150-ebfa-46b5-a1c9-38bfecd4fdfd",
          "title": "User Authentication API for not registered user",
          "fullFile": "C:\\Users\\Maria\\OneDrive - Faculty of Engineering Ain Shams University\\Desktop\\SDET_Task_Mariam_Waleed\\API_TEST\\test\\authenticate_user.js",
          "file": "\\test\\authenticate_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return status 401 and \"Incorrect email or password\" for unregistered email",
              "fullTitle": "User Authentication API for not registered user should return status 401 and \"Incorrect email or password\" for unregistered email",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var credentials = {\n  email: \"not_registestered@gmail.com\",\n  password: \"not_registestered_password\"\n};\nrequest.post('/api/v1/auth').send(credentials).expect(401).end(function (err, res) {\n  if (err) return done(err);\n  var responseBody = res.body;\n  if (responseBody.message !== 'Incorrect email or password') {\n    return done(new Error('Unexpected message in response'));\n  }\n  console.log('Status:', res.status); // Display the response status\n  console.log('Response message:', responseBody.message); // Display the response message\n  done();\n});",
              "err": {},
              "uuid": "d8fdd37c-0646-4b7b-bbca-35d838a43b39",
              "parentUUID": "47c74150-ebfa-46b5-a1c9-38bfecd4fdfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8fdd37c-0646-4b7b-bbca-35d838a43b39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d777b48-cad3-415e-a176-c583b7cee169",
          "title": "User Authentication API for a registered user",
          "fullFile": "C:\\Users\\Maria\\OneDrive - Faculty of Engineering Ain Shams University\\Desktop\\SDET_Task_Mariam_Waleed\\API_TEST\\test\\authenticate_user.js",
          "file": "\\test\\authenticate_user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Authentication API for a registered user\"",
              "fullTitle": "User Authentication API for a registered user \"before all\" hook in \"User Authentication API for a registered user\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "af8c0172-1bed-4c7a-87c5-763ed79c39ff",
              "parentUUID": "2d777b48-cad3-415e-a176-c583b7cee169",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should authenticate the user and store the token",
              "fullTitle": "User Authentication API for a registered user should authenticate the user and store the token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!userEmail || !userPassword) {\n  return done(new Error('User email or password missing'));\n}\nvar credentials = {\n  email: userEmail,\n  password: userPassword\n};\nrequest.post('/api/v1/auth').send(credentials).expect(200).end(function (err, res) {\n  if (err) return done(err);\n  var responseBody = res.body;\n  if (!responseBody.token) {\n    return done(new Error('Token missing in response'));\n  }\n  // Store token for further use\n  authToken = responseBody.token;\n  console.log('User authenticated with token:', authToken);\n  done();\n});",
              "err": {},
              "uuid": "43ab607c-8291-43d3-bace-85073987c24b",
              "parentUUID": "2d777b48-cad3-415e-a176-c583b7cee169",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43ab607c-8291-43d3-bace-85073987c24b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "authenticate_user_report.html",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "authenticate_user_report.html"
      },
      "version": "6.2.0"
    }
  }
}