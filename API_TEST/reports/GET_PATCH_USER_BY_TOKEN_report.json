{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2024-05-12T15:37:51.568Z",
    "end": "2024-05-12T15:37:51.714Z",
    "duration": 146,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d7c5d808-2ef6-4835-8c45-d2a24dd752ea",
      "title": "",
      "fullFile": "C:\\Users\\Maria\\OneDrive - Faculty of Engineering Ain Shams University\\Desktop\\SDET_Task_Mariam_Waleed\\API_TEST\\test\\GET_PATCH_USER_BY_TOKEN.js",
      "file": "\\test\\GET_PATCH_USER_BY_TOKEN.js",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 10,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Create user\nvar newUser = {\n  name: faker.name.firstName(),\n  email: faker.internet.email(),\n  password: faker.internet.password()\n};\n//register a new user first then authenticate it to continue\nrequest.post('/api/v1/users').send(newUser).expect(200).end(function (err, res) {\n  if (err) return done(err);\n  // Authenticate user\n  var credentials = {\n    email: newUser.email,\n    password: newUser.password\n  };\n  request.post('/api/v1/auth').send(credentials).expect(200).end(function (err, res) {\n    if (err) return done(err);\n    authToken = res.body.token; //to authenticate user to get token used to delete user by token\n    done();\n  });\n});",
          "err": {},
          "uuid": "d3146d12-313e-4d2a-935c-c39d5ca7b9ca",
          "parentUUID": "d7c5d808-2ef6-4835-8c45-d2a24dd752ea",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 9,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "aa30f391-b8a2-401e-b2a1-928fdfac70e1",
          "parentUUID": "d7c5d808-2ef6-4835-8c45-d2a24dd752ea",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "be95feae-3d0c-4082-8062-6874ce2e2e79",
          "title": "Update User API,valid,invalid,valid_wrong_token",
          "fullFile": "C:\\Users\\Maria\\OneDrive - Faculty of Engineering Ain Shams University\\Desktop\\SDET_Task_Mariam_Waleed\\API_TEST\\test\\GET_PATCH_USER_BY_TOKEN.js",
          "file": "\\test\\GET_PATCH_USER_BY_TOKEN.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valid body,invalid token",
              "fullTitle": "Update User API,valid,invalid,valid_wrong_token valid body,invalid token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var invalidToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpb';\nrequest.patch('/api/v1/users').set('Authorization', invalidToken).send(requestBody).expect(403).end(function (err, res) {\n  if (err) return done(err);\n  var responseBody = res.body;\n  console.log('Status:', res.status); // Display the response status\n  console.log('Response message:', responseBody.message); // Display the response message\n  done();\n});",
              "err": {},
              "uuid": "476e666b-70ac-4caa-bc11-496c09811af3",
              "parentUUID": "be95feae-3d0c-4082-8062-6874ce2e2e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "valid body,valid token format but wrong",
              "fullTitle": "Update User API,valid,invalid,valid_wrong_token valid body,valid token format but wrong",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrongToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5ld19lbWFpbEBnbWFpbC5jb20iLCJpZCI6MzcwNDMsImlhdCI6MTcxMzEyNjcyOCwiZXhwIjoxNzEzMjEzMTI4fQ.y0j2VWhO5_Gwm3V2-_mrjETS_BenLyKwTMLteFV3puc';\nrequest.patch('/api/v1/users').set('Authorization', wrongToken).send(requestBody).expect(403).end(function (err, res) {\n  if (err) return done(err);\n  console.log('Status:', res.status); // Display the response status\n  done();\n});",
              "err": {},
              "uuid": "f4e89d53-f7a7-4b5f-9cc2-4126104dac3d",
              "parentUUID": "be95feae-3d0c-4082-8062-6874ce2e2e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid body(wrong name field,pass is missed),valid correct token",
              "fullTitle": "Update User API,valid,invalid,valid_wrong_token invalid body(wrong name field,pass is missed),valid correct token",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var requestBody = {\n  \"Wrong\": \"newName\",\n  \"email\": \"new_email@gmail.com\"\n};\nrequest.patch('/api/v1/users').set('Authorization', authToken).send(requestBody).expect(403).end(function (err, res) {\n  console.log('Status:', res.status); // Display the response status\n  if (res.body.message === 'User updated with success!' && res.status === 200) {\n    return done(new Error('for invalid body Message in response should not be :User updated with success! and status code should not be 200'));\n  }\n  done();\n});",
              "err": {
                "message": "Error: for invalid body Message in response should not be :User updated with success! and status code should not be 200",
                "estack": "Error: for invalid body Message in response should not be :User updated with success! and status code should not be 200\n    at Test.<anonymous> (test\\/GET_PATCH_USER_BY_TOKEN.js:254:25)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:172:8)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (node_modules\\superagent\\src\\node\\index.js:913:12)\n    at fn (node_modules\\superagent\\src\\node\\index.js:1166:18)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "6b10ca86-2a32-4eb9-bc10-9e82ff7ece4d",
              "parentUUID": "be95feae-3d0c-4082-8062-6874ce2e2e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid body->blank sent body,valid correct token",
              "fullTitle": "Update User API,valid,invalid,valid_wrong_token invalid body->blank sent body,valid correct token",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.patch('/api/v1/users').set('Authorization', authToken).send({}).end(function (err, res) {\n  console.log('Status:', res.status); // Display the response status\n  // Check if the response message is 'User registered with success' and status code is not 200\n  if (res.body.message === 'User updated with success!' && res.status === 200) {\n    return done(new Error('for invalid body Message in response should not be :User updated with success! and status code should not be 200'));\n  }\n  done();\n});",
              "err": {
                "message": "Error: for invalid body Message in response should not be :User updated with success! and status code should not be 200",
                "estack": "Error: for invalid body Message in response should not be :User updated with success! and status code should not be 200\n    at Test.<anonymous> (test\\/GET_PATCH_USER_BY_TOKEN.js:271:17)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:172:8)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (node_modules\\superagent\\src\\node\\index.js:913:12)\n    at fn (node_modules\\superagent\\src\\node\\index.js:1166:18)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "f8fbd02b-5e7b-417e-9ba0-57ed3b43d1af",
              "parentUUID": "be95feae-3d0c-4082-8062-6874ce2e2e79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "476e666b-70ac-4caa-bc11-496c09811af3",
            "f4e89d53-f7a7-4b5f-9cc2-4126104dac3d"
          ],
          "failures": [
            "6b10ca86-2a32-4eb9-bc10-9e82ff7ece4d",
            "f8fbd02b-5e7b-417e-9ba0-57ed3b43d1af"
          ],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "GET_PATCH_USER_BY_TOKEN_report.html",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "GET_PATCH_USER_BY_TOKEN_report.html"
      },
      "version": "6.2.0"
    }
  }
}